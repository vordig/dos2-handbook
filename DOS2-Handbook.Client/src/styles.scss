// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.
@use 'scss/mixins/sprite-sheet' as sprite-sheet;
@use 'scss/mixins/font-stack' as font-stack;

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$dos2-handbook-client-primary: mat.define-palette(mat.$indigo-palette);
$dos2-handbook-client-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$dos2-handbook-client-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$dos2-handbook-client-theme: mat.define-light-theme((color: (primary: $dos2-handbook-client-primary,
        accent: $dos2-handbook-client-accent,
        warn: $dos2-handbook-client-warn,
      ),
      typography: mat.define-typography-config(),
      density: 0));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($dos2-handbook-client-theme);

/* You can add global styles to this file, and also import other style files */

html,
body {
  height: 100%;
}

body {
  margin: 0;
  // font-family: font-stack.old-style();
  font-family: font-stack.slab-serif();
}


$sprite-sheet-url: "./assets/ability-schools.png";
$ability-school-sprites-map: (
  "aerotheurge": 2 1,
  "geomancer": 3 1,
  "huntsman": 1 0,
  "hydrosophist": 1 1,
  "necromancer": 0 2,
  "polymorph": 2 2,
  "pyrokinetic": 0 1,
  "scoundrel": 2 0,
  "summoning": 1 2,
  "warfare": 0 0,
  "sourcery": 3 0,
  "special-skills": 3 2
);
$ability-school-sprites-sizes: (
  "small": 16px,
  "medium": 24px,
  "large": 32px
);

@include sprite-sheet.define-sprite-sheet($sprite-sheet-url, 32px, 4, 3, "ability-school-icon", $ability-school-sprites-map, $ability-school-sprites-sizes);


$ability-school-colors-map: (
  "aerotheurge": #5349b0,
  "geomancer": #7a4520,
  "huntsman": #717f34,
  "hydrosophist": #5885af,
  "necromancer": #a83a96,
  "polymorph": #fbc246,
  "pyrokinetic": #da772b,
  "scoundrel": #5a8886,
  "summoning": #7e47ac,
  "warfare": #a22d32,
  "sourcery": #537c71,
  "special-skills": #d0b86e
);

@each $name, $color in $ability-school-colors-map {
  .ability-school-color--#{$name} {
    --color: #{$color};
    color: var(--color);
  }
}